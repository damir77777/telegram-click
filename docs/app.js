let balance = 0;
let clickPower = 1;
let passiveIncome = 1;
let clickLevel = 1;
let clickXP = 0;
const xpPerLevel = 50;

const balanceEl = document.getElementById("balance");
const clickPowerEl = document.getElementById("clickPower");
const passiveIncomeEl = document.getElementById("passiveIncome");
const clickLevelEl = document.getElementById("clickLevel");
const clickImage = document.getElementById("clickImage");
const clickProgressEl = document.getElementById("clickProgress");
const leaderboardEl = document.getElementById("leaderboard");

// frames –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
const frames = ["frames/frame.png"];
let frameIndex = 0;

// === Telegram WebApp API ===
window.Telegram.WebApp.ready();

function sendDataToBot(data) {
    if (window.Telegram && window.Telegram.WebApp) {
        window.Telegram.WebApp.sendData(JSON.stringify(data));
    }
}

// === –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–æ–≤ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ ===
sendDataToBot({ action: "get_stats" });

// —Å–ª—É—à–∞–µ–º –æ—Ç–≤–µ—Ç—ã –æ—Ç Python-–±–æ—Ç–∞
window.Telegram.WebApp.onEvent("message", (event) => {
    try {
        const data = JSON.parse(event.data);

        // –µ—Å–ª–∏ –ø—Ä–∏—à–ª–∏ —Å—Ç–∞—Ç—ã –∏–≥—Ä–æ–∫–∞
        if (data.balance !== undefined) {
            balance = data.balance;
            clickPower = data.clickPower;
            passiveIncome = data.passiveIncome;
            clickLevel = data.clickLevel;
            clickXP = data.clickXP;
            updateStats();
            updateClickProgress();
        }

        // –µ—Å–ª–∏ –ø—Ä–∏—à–ª–∞ —Ç–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤
        if (data.leaderboard !== undefined) {
            leaderboardEl.innerHTML = "";
            data.leaderboard.forEach((user, index) => {
                const li = document.createElement("li");
                const medals = ["ü•á", "ü•à", "ü•â"];
                const medal = medals[index] || (index + 1) + "Ô∏è‚É£";
                li.textContent = `${medal} ${user.name} ‚Äî ${user.balance} üí∞`;
                leaderboardEl.appendChild(li);
            });
        }

    } catch (e) {
        console.error("–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –±–æ—Ç–∞:", e);
    }
});

// === –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ ===
function updateStats() {
    balanceEl.textContent = balance;
    clickPowerEl.textContent = clickPower;
    passiveIncomeEl.textContent = passiveIncome;
    clickLevelEl.textContent = clickLevel;
}

// –ø—Ä–æ–≥—Ä–µ—Å—Å —É—Ä–æ–≤–Ω—è
function updateClickProgress() {
    const progress = Math.min((clickXP / xpPerLevel) * 100, 100);
    clickProgressEl.style.width = progress + "%";

    if (clickXP >= xpPerLevel) {
        clickLevel++;
        clickXP = 0;
        clickPower += 1;
        updateStats();
        animateLevelUp();
    }
}

// –∞–Ω–∏–º–∞—Ü–∏—è –∞–ø–≥—Ä–µ–π–¥–∞
function animateLevelUp() {
    clickImage.style.transform = "scale(1.2)";
    clickImage.style.animation = "jump 0.3s";
    setTimeout(() => {
        clickImage.style.transform = "scale(1)";
        clickImage.style.animation = "";
    }, 300);
}

// === –∫–ª–∏–∫–∏ –ø–æ –∫–∞—Ä—Ç–∏–Ω–∫–µ ===
clickImage.addEventListener("click", () => {
    balance += clickPower;
    clickXP += clickPower;
    updateStats();
    updateClickProgress();

    // –∞–Ω–∏–º–∞—Ü–∏—è
    frameIndex = (frameIndex + 1) % frames.length;
    clickImage.src = frames[frameIndex];
    clickImage.style.animation = "jump 0.3s";
    setTimeout(() => (clickImage.style.animation = ""), 300);

    // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    sendDataToBot({
        action: "click",
        balance,
        clickPower,
        clickLevel,
        passiveIncome,
        clickXP,
    });
});

// === –∞–ø–≥—Ä–µ–π–¥ –∫–ª–∏–∫–∞ ===
document.getElementById("upgradeClick").addEventListener("click", () => {
    if (balance >= 10) {
        balance -= 10;
        clickPower += 1;
        updateStats();
        sendDataToBot({ action: "upgradeClick", balance, clickPower });
    }
});

// === –∞–ø–≥—Ä–µ–π–¥ –ø–∞—Å—Å–∏–≤–∞ ===
document.getElementById("upgradePassive").addEventListener("click", () => {
    if (balance >= 20) {
        balance -= 20;
        passiveIncome += 1;
        updateStats();
        sendDataToBot({ action: "upgradePassive", balance, passiveIncome });
    }
});

// === –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É ===
setInterval(() => {
    balance += passiveIncome;
    updateStats();
    sendDataToBot({ action: "passiveIncome", balance, passiveIncome });
}, 60000);

// === –∑–∞–ø—Ä–æ—Å —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤ ===
function loadLeaderboard() {
    sendDataToBot({ action: "get_leaderboard" });
}

// –ø–æ–¥–≥—Ä—É–∑–∫–∞ —Ç–æ–ø–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
loadLeaderboard();
